{"mappings":"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","sources":["workspaces/utils/src/index.js","workspaces/utils/src/utils.js","workspaces/utils/src/parse_arguments.js"],"sourcesContent":["import {\n  exists,\n  isSupportedFileExtension,\n  simpleProjectRootDir\n} from '../src/utils.js'\nimport parseArguments from '../src/parse_arguments.js'\n\nexport {\n  exists,\n  isSupportedFileExtension,\n  parseArguments,\n  simpleProjectRootDir\n}","import minimist from 'minimist';\nimport debugFunc from 'debug'\nimport path from 'path'\nimport fs from 'fs'\nimport { randomInt } from 'crypto';\n\nconst debug = debugFunc('@foo-dog:utils')\n\nfunction isSupportedFileExtension(fileExtWithDot) {\n  debug('isSupportedFileExtension(): fileExtWithDot=' + fileExtWithDot)\n  return fileExtWithDot.toLowerCase() == '.pug' || fileExtWithDot.toLowerCase() == '.foo-dog'\n}\n\nArray.prototype.peek = function () {\n  return this[this.length - 1]\n}\n\nString.prototype.removeFromEnd = function (str) {\n  return this.endsWith(str) ? this.substring(0, this.lastIndexOf(str)) : this.toString()\n}\n\nfunction exists(filename) {\n  try {\n    return (fs.accessSync(filename), true)\n  } catch (e) {\n    return false\n  }\n}\n\nfunction directoryExists(dir) {\n  try {\n    // fs.lstatSync(destFileToWriteTo)\n    fs.accessSync(dir, fs.constants.R_OK)\n    return true\n  } catch (e) { }\n  return false\n}\n\nfunction createDirectory(dir) {\n  fs.mkdirSync(dir, { recursive: true });\n}\n\n/**\n * @param process Node process (TODO: pass in arguments only)\n * @param printUsage function\n */\n// This isn't fully flushed out yet\nasync function parseArguments(process, printUsage) {\n  const argv = minimist(process.argv.slice(2))\n  // debug('argv=', argv)\n\n\n  \n  let ret = { in: {}, out: {} }\n\n  if (argv.help || argv.h) {\n    debug('help option detected')\n    if (printUsage != undefined && typeof printUsage === 'function') {\n      printUsage()\n    }\n    else {\n      console.log('No help available. Please contact the developer, which is probably Adam Koch, and tell him he is missing the help.')\n    }\n    process.exit()\n  } else if (argv._.length == 0) {\n    debug('no arguments - using stdin and stdout')\n    ret = { \n      in: { \n        name: 'stdin', \n        createStream: () => process.stdin, \n        isDir: () => false \n      }, \n      out: { \n        name: 'stdout', \n        createStream: () => process.stdout, \n        isDir: () => false\n      }\n    }\n  } else if (argv._.length == 1) {\n    debug('one argument - reading file and piping to stdout')\n    try {\n      fs.accessSync(argv._[0], fs.constants.R_OK)\n    } catch (e) {\n      throw new Error(`Could not ${e.syscall} \"${e.path}\"`)\n    }\n\n    // debug('creating read stream for ' + argv?._[0])\n    const resolvedIn = path.resolve(argv._[0])\n\n    ret = {\n      in: {\n        name: argv._[0],\n        createStream: () => fs.createReadStream(resolvedIn),\n        isDir: () => fs.lstatSync(argv._[0]).isDirectory(),\n        files: () => fs.lstatSync(resolvedIn).isDirectory() ? fs.readdirSync(resolvedIn, { withFileTypes: true }).filter(dirent => dirent.isFile() && isSupportedFileExtension(path.extname(dirent.name.slice(1)))).map(dirrent => dirrent.name) : resolvedIn\n      },\n      out: { name: 'stdout', createStream: () => process.stdout, isDir: () => false },\n      override: argv.f\n    }\n  } else {\n    debug('two or more arguments')\n\n    if (argv._[0] == '-') {\n      debug('first argument was - - using stdin')\n      ret.in = {\n        name: 'stdin',\n        createStream: () => process.stdin,\n        isDir: () => false\n      }\n      debug('Reading from stdin');\n    } else {\n      const resolvedIn = path.resolve(argv._[0])\n      debug(`first argument was ${argv._[0]}. Resolved is ${resolvedIn}`)\n      try {\n        fs.accessSync(resolvedIn, fs.constants.R_OK)\n\n        debug('fs.readdirSync(resolvedIn)=', fs.readdirSync(resolvedIn))\n\n        ret.in = {\n          name: resolvedIn,\n          createStream: () => fs.createReadStream(resolvedIn),\n          isDir: () => fs.lstatSync(resolvedIn).isDirectory(),\n          files: () => {\n            if (fs.lstatSync(resolvedIn).isDirectory()) {\n              return fs\n                .readdirSync(resolvedIn, { withFileTypes: true })\n                .filter(dirent => dirent.isFile() && isSupportedFileExtension(path.extname(dirent.name.slice(1))))\n                .map(dirrent => {\n                  debug('dirrent.name=' + dirrent.name)\n                  debug('path.resolve(resolvedIn, dirrent.name)=' + path.resolve(resolvedIn, dirrent.name))\n                  return path.resolve(resolvedIn, dirrent.name)\n                }) \n             }\n             else {\n              return resolvedIn\n             }\n          }\n        }\n      } catch (e) {\n        if (e.hasOwnProperty('syscall'))\n          throw new Error(`Could not ${e.syscall} \"${e.path}\"`, { cause: e })\n        else\n          throw e;\n      }\n    }\n\n    if (argv._[1] == '-') {\n      debug('second argument was - - using stdout')\n      ret.out = {\n        name: 'stdout',\n        createStream: () => process.stdout,\n        isDir: () => false\n      }\n      debug('writing to stdout');\n    } else {\n\n      debug('argv._[1]=', argv._[1])\n      const dest = path.resolve(argv._[1]);\n      debug('dest=', dest)\n\n      if (argv._[1].endsWith(path.sep)) {\n        // handle out as directory\n        \n        // check if the directory exists\n        if (!directoryExists(dest)) {\n          createDirectory(dest)\n        }\n        ret.out = {\n          name: dest,\n          createStream: () => fs.createWriteStream(dest, { flags: 'w' }),\n          isDir: () => true\n        }\n      }\n      else {\n        // handleOutAsFile\n\n        const destDir = path.dirname(argv._[1]);\n\n        // check if the directory exists\n        if (!directoryExists(destDir)) {\n          createDirectory(destDir)\n        }\n        ret.out = {\n          name: argv._[1],\n          createStream: () => {\n            return fs.createWriteStream(dest, { flags: 'w' })\n          },\n          isDir: () => false\n        }\n\n      }\n    }\n  }\n\n  if (argv.hasOwnProperty('f')) {\n    ret.override = argv.f\n  }\n  if (argv.hasOwnProperty('allow-digits-to-start-css-classes')) {\n    ret.allowDigitToStartClassName = !!argv['allow-digits-to-start-css-classes']\n    debug('ret.allowDigitToStartClassName=', ret.allowDigitToStartClassName)\n  } else if (argv.hasOwnProperty('allowDigitToStartClassName')) {\n    ret.allowDigitToStartClassName = new Boolean(argv['allowDigitToStartClassName'])\n    debug('ret.allowDigitToStartClassName=', ret.allowDigitToStartClassName)\n  }\n\n  return ret\n}\n\nfunction simpleProjectRootDir() {\n  const originalDir = process.cwd()\n  let notFound = true\n  while (notFound) {\n    try {\n      fs.accessSync('package.json', fs.constants.F_OK)\n      notFound = false\n    } catch (e) {\n      process.chdir('..')\n    }\n  }\n  const pkgDir = process.cwd()\n  process.chdir(originalDir)\n  return pkgDir\n}\n\nexport {\n  exists,\n  isSupportedFileExtension,\n  parseArguments,\n  simpleProjectRootDir\n}","import debugFunc from 'debug'\nconst debug = debugFunc('@foo-dog/utils:parse_arguments')\nconst shouldExit = !import.meta.url.endsWith('?test')\n\n/**\n * @param process Node process (TODO: pass in arguments only)\n * @param printUsage function to print when \"-h\" or \"--help\" is a parameter\n * @param options optional and required parameters:\n *        {\n *          optional: [\n *            {\n *              name: '',\n *              aliases: []\n *            }\n *          ],\n *          required: [\n *            {\n *              name: '',\n *              aliases: []\n *            }\n *          ]\n *        }\n */\n// This isn't fully flushed out yet\nasync function parseArguments(processOrArgv, printUsage, options) {\n\n  function looksLikeAProcess(processOrNot) {\n    debug('processOrNot=', processOrNot)\n    return processOrNot[0].startsWith('/') || processOrNot.hasOwnProperty('argv')\n  }\n\n  if (options == undefined) {\n    if (printUsage !== null && typeof printUsage === 'object') {\n      options = printUsage\n    }\n    else {\n      options = {}\n    }\n  }\n\n  const optionalParams = options.optional ?? []\n  const requiredParams = options.required ?? []\n\n  debug('options.required=', options.required)\n  debug('requiredParams=', requiredParams)\n\n  const ret = {}\n  let args\n  if (looksLikeAProcess(processOrArgv)) {\n    ret.nodePath = processOrArgv[0]\n    ret.program = processOrArgv[1]\n    args = processOrArgv.slice(2)\n  }\n  else {\n    args = processOrArgv?.argv || processOrArgv\n  }\n\n  if (args.includes('-h') || args.includes('--help')) {\n    printUsage()\n    if (shouldExit) {\n      process.exit(0)\n    }\n  }\n\n  const internalOptions = {}, internalArgs = []\n  for (let i = 0; i < args.length; i++) {\n    const element = args[i];\n    if (element.startsWith('-')) {\n      const [key, val] = element.split('=')\n      internalOptions[key] = val ?? true\n    }\n    else {\n      internalArgs.push(element)\n    }\n  }\n\n  if (internalArgs.length > 0) {\n    ret.args = internalArgs\n  }\n\n  if (Object.keys(internalOptions).length > 0) {\n    ret.options = internalOptions\n  }\n\n  debug('requiredParams.length=', requiredParams.length)\n  for (let reqIdx = 0; reqIdx < requiredParams.length; reqIdx++) {\n    const element = requiredParams[reqIdx];\n    debug('required=', element)\n    debug('ret?.args=', ret?.args)\n    debug('requiredParams[reqIdx].aliases=', requiredParams[reqIdx].aliases)\n\n    debug('(new Array()).concat(element.name).concat(requiredParams[reqIdx].aliases)=', (new Array()).concat(element.name).concat(requiredParams[reqIdx].aliases))\n    new Array(element.name).concat(requiredParams[reqIdx].aliases).forEach(requiredName => {\n      debug(requiredName)\n    })\n    if (!new Array(element.name).concat(requiredParams[reqIdx].aliases).some(requiredName => {\n      debug('!!ret?.args?.contains(requiredName)=', !!ret?.args?.contains(requiredName))\n      debug('ret?.options?.hasOwnProperty(requiredName)=', ret?.options?.hasOwnProperty(requiredName))\n      if (!!ret?.args?.contains(requiredName) || ret?.options?.hasOwnProperty(requiredName)) {\n        debug('don\\'t throw')\n        return true\n      }\n      else {\n        debug('throw')\n        return false\n      }\n    })) {\n      throw new Error('Required field \"' + element.name + '\" was not found')\n    }\n  }\n  \n  return ret\n\n\n  // // const argv = minimist(process.argv.slice(2))\n  // // debug('argv=', argv)\n  // let ret = { in: {}, out: {} }\n\n  // if (argv.help || argv.h) {\n  //   debug('help option detected')\n  //   if (printUsage != undefined && typeof printUsage === 'function') {\n  //     printUsage()\n  //   }\n  //   else {\n  //     debug('No help available. Please contact the developer, which is probably Adam Koch, and tell him he is missing the help.')\n  //   }\n  //   process.exit()\n  // } else if (argv._.length == 0) {\n  //   debug('no arguments - using stdin and stdout')\n  //   ret = { \n  //     in: { \n  //       name: 'stdin', \n  //       createStream: () => process.stdin, \n  //       isDir: () => false \n  //     }, \n  //     out: { \n  //       name: 'stdout', \n  //       createStream: () => process.stdout, \n  //       isDir: () => false\n  //     }\n  //   }\n  // } else if (argv._.length == 1) {\n  //   debug('one argument - reading file and piping to stdout')\n  //   try {\n  //     fs.accessSync(argv._[0], fs.constants.R_OK)\n  //   } catch (e) {\n  //     throw new Error(`Could not ${e.syscall} \"${e.path}\"`)\n  //   }\n\n  //   // debug('creating read stream for ' + argv?._[0])\n  //   const resolvedIn = path.resolve(argv._[0])\n\n  //   ret = {\n  //     in: {\n  //       name: argv._[0],\n  //       createStream: () => fs.createReadStream(resolvedIn),\n  //       isDir: () => fs.lstatSync(argv._[0]).isDirectory(),\n  //       files: () => fs.lstatSync(resolvedIn).isDirectory() ? fs.readdirSync(resolvedIn, { withFileTypes: true }).filter(dirent => dirent.isFile() && isSupportedFileExtension(path.extname(dirent.name.slice(1)))).map(dirrent => dirrent.name) : resolvedIn\n  //     },\n  //     out: { name: 'stdout', createStream: () => process.stdout, isDir: () => false },\n  //     override: argv.f\n  //   }\n  // } else {\n  //   debug('two or more arguments')\n\n  //   if (argv._[0] == '-') {\n  //     debug('first argument was - - using stdin')\n  //     ret.in = {\n  //       name: 'stdin',\n  //       createStream: () => process.stdin,\n  //       isDir: () => false\n  //     }\n  //     debug('Reading from stdin');\n  //   } else {\n  //     const resolvedIn = path.resolve(argv._[0])\n  //     debug(`first argument was ${argv._[0]}. Resolved is ${resolvedIn}`)\n  //     try {\n  //       fs.accessSync(resolvedIn, fs.constants.R_OK)\n\n  //       debug('fs.readdirSync(resolvedIn)=', fs.readdirSync(resolvedIn))\n\n  //       ret.in = {\n  //         name: resolvedIn,\n  //         createStream: () => fs.createReadStream(resolvedIn),\n  //         isDir: () => fs.lstatSync(resolvedIn).isDirectory(),\n  //         files: () => {\n  //           if (fs.lstatSync(resolvedIn).isDirectory()) {\n  //             return fs\n  //               .readdirSync(resolvedIn, { withFileTypes: true })\n  //               .filter(dirent => dirent.isFile() && isSupportedFileExtension(path.extname(dirent.name.slice(1))))\n  //               .map(dirrent => {\n  //                 debug('dirrent.name=' + dirrent.name)\n  //                 debug('path.resolve(resolvedIn, dirrent.name)=' + path.resolve(resolvedIn, dirrent.name))\n  //                 return path.resolve(resolvedIn, dirrent.name)\n  //               }) \n  //            }\n  //            else {\n  //             return resolvedIn\n  //            }\n  //         }\n  //       }\n  //     } catch (e) {\n  //       if (e.hasOwnProperty('syscall'))\n  //         throw new Error(`Could not ${e.syscall} \"${e.path}\"`, { cause: e })\n  //       else\n  //         throw e;\n  //     }\n  //   }\n\n  //   if (argv._[1] == '-') {\n  //     debug('second argument was - - using stdout')\n  //     ret.out = {\n  //       name: 'stdout',\n  //       createStream: () => process.stdout,\n  //       isDir: () => false\n  //     }\n  //     debug('writing to stdout');\n  //   } else {\n\n  //     debug('argv._[1]=', argv._[1])\n  //     const dest = path.resolve(argv._[1]);\n  //     debug('dest=', dest)\n\n  //     if (argv._[1].endsWith(path.sep)) {\n  //       // handle out as directory\n        \n  //       // check if the directory exists\n  //       if (!directoryExists(dest)) {\n  //         createDirectory(dest)\n  //       }\n  //       ret.out = {\n  //         name: dest,\n  //         createStream: () => fs.createWriteStream(dest, { flags: 'w' }),\n  //         isDir: () => true\n  //       }\n  //     }\n  //     else {\n  //       // handleOutAsFile\n\n  //       const destDir = path.dirname(argv._[1]);\n\n  //       // check if the directory exists\n  //       if (!directoryExists(destDir)) {\n  //         createDirectory(destDir)\n  //       }\n  //       ret.out = {\n  //         name: argv._[1],\n  //         createStream: () => {\n  //           return fs.createWriteStream(dest, { flags: 'w' })\n  //         },\n  //         isDir: () => false\n  //       }\n\n  //     }\n  //   }\n  // }\n\n  // if (argv.hasOwnProperty('f')) {\n  //   ret.override = argv.f\n  // }\n  // if (argv.hasOwnProperty('allow-digits-to-start-css-classes')) {\n  //   ret.allowDigitToStartClassName = !!argv['allow-digits-to-start-css-classes']\n  //   debug('ret.allowDigitToStartClassName=', ret.allowDigitToStartClassName)\n  // } else if (argv.hasOwnProperty('allowDigitToStartClassName')) {\n  //   ret.allowDigitToStartClassName = new Boolean(argv['allowDigitToStartClassName'])\n  //   debug('ret.allowDigitToStartClassName=', ret.allowDigitToStartClassName)\n  // }\n\n  // return ret\n}\n\nexport default parseArguments"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../../"}