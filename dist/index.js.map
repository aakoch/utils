{"mappings":"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","sources":["workspaces/utils/src/index.js"],"sourcesContent":["import minimist from 'minimist';\nimport debugFunc from 'debug'\nimport path from 'path'\nimport fs from 'fs'\n\nconst debug = debugFunc('@aakoch:utils')\n\nfunction isSupportedFileExtension(fileExtWithDot) {\n  debug('isSupportedFileExtension(): fileExtWithDot=' + fileExtWithDot)\n  return fileExtWithDot.toLowerCase() == '.pug' || fileExtWithDot.toLowerCase() == '.foo-dog'\n}\n\nArray.prototype.peek = function () {\n  return this[this.length - 1]\n}\n\nString.prototype.removeFromEnd = function (str) {\n  return this.endsWith(str) ? this.substring(0, this.lastIndexOf(str)) : this.toString()\n}\n\nfunction exists(filename) {\n  try {\n    return (fs.accessSync(filename), true)\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * @param process Node process (TODO: pass in arguments only)\n * @param printUsage function\n */\nasync function parseArguments(process, printUsage) {\n  const argv = minimist(process.argv.slice(2))\n  debug('argv=', argv)\n  let ret = { in: {}, out: {} }\n\n  if (argv.help || argv.h) {\n    debug('help option detected')\n    if (printUsage != undefined && typeof printUsage === 'function') {\n      printUsage()\n    }\n    else {\n      console.log('No help available. Please contact the developer, which is probably Adam Koch, and tell him he is missing the help.')\n    }\n    process.exit()\n  } else if (argv._.length == 0) {\n    debug('no arguments - using stdin and stdout')\n    ret = { in: { name: 'stdin', createStream: () => process.stdin }, out: { name: 'stdout', createStream: () => process.stdout } }\n  } else if (argv._.length == 1) {\n    debug('one argument - reading file and piping to stdout')\n    try {\n      fs.accessSync(argv._[0], fs.constants.R_OK)\n    } catch (e) {\n      throw new Error(`Could not ${e.syscall} \"${e.path}\"`)\n    }\n\n    debug('creating read stream for ' + argv?._[0])\n    ret = {\n      in: { name: argv._[0], createStream: () => fs.createReadStream(argv._[0]) },\n      out: { name: 'stdout', createStream: () => process.stdout },\n      override: argv.f\n    }\n  } else {\n    debug('two or more arguments')\n\n    if (argv._[0] == '-') {\n      debug('first argument was - - using stdin')\n      ret.in = {\n        name: 'stdin',\n        createStream: () => process.stdin\n      }\n      debug('Reading from stdin');\n    } else {\n      const resolvedIn = path.resolve(argv._[0])\n      debug(`first argument was ${argv._[0]}. Resolved is ${resolvedIn} - reading file`)\n      try {\n        fs.accessSync(resolvedIn, fs.constants.R_OK)\n\n        ret.in = {\n          name: resolvedIn,\n          createStream: () => fs.createReadStream(resolvedIn)\n        }\n      } catch (e) {\n        if (e.hasOwnProperty('syscall'))\n          throw new Error(`Could not ${e.syscall} \"${e.path}\"`, { cause: e })\n        else\n          throw e;\n      }\n    }\n\n    if (argv._[1] == '-') {\n      debug('second argument was - - using stdout')\n      ret.out = {\n        name: 'stdout',\n        createStream: () => process.stdout\n      }\n      console.log('writing to stdout');\n    } else {\n      const destFileToWriteTo = path.resolve(argv._[1]);\n      const destFolderToCreate = path.dirname(destFileToWriteTo);\n      debug(`creating (if not already existing) ${destFolderToCreate}`);\n      fs.mkdirSync(destFolderToCreate, { recursive: true });\n\n      debug(`second argument was ${argv._[1]}. Resolved ${destFileToWriteTo} - writing file`)\n\n      try {\n        ret.out = {\n          name: destFileToWriteTo,\n          createStream: () => fs.createWriteStream(destFileToWriteTo, { flags: 'w' })\n        }\n      } catch (e) {\n        if (e.hasOwnProperty('syscall'))\n          throw new Error(`Could not ${e.syscall} \"${e.path}\"`, { cause: e })\n        else\n          throw e;\n      }\n    }\n  }\n\n  if (argv.hasOwnProperty('f')) {\n    ret.override = argv.f\n  }\n  if (argv.hasOwnProperty('allow-digits-to-start-css-classes')) {\n    ret.allowDigitToStartClassName = !!argv['allow-digits-to-start-css-classes']\n    debug('ret.allowDigitToStartClassName=', ret.allowDigitToStartClassName)\n  } else if (argv.hasOwnProperty('allowDigitToStartClassName')) {\n    ret.allowDigitToStartClassName = new Boolean(argv['allowDigitToStartClassName'])\n    debug('ret.allowDigitToStartClassName=', ret.allowDigitToStartClassName)\n  }\n\n  return ret\n}\n\nfunction simpleProjectRootDir() {\n  const originalDir = process.cwd()\n  let notFound = true\n  while (notFound) {\n    try {\n      fs.accessSync('package.json', fs.constants.F_OK)\n      notFound = false\n    } catch (e) {\n      process.chdir('..')\n    }\n  }\n  const pkgDir = process.cwd()\n  process.chdir(originalDir)\n  return pkgDir\n}\n\nexport {\n  exists,\n  isSupportedFileExtension,\n  parseArguments,\n  simpleProjectRootDir\n}"],"names":["$fdeccbe171b4469a$var$debug","$bJOKe$debug","$fdeccbe171b4469a$export$777d1004acb65c30","fileExtWithDot","toLowerCase","$fdeccbe171b4469a$export$f7e9f41ea797a17","filename","$bJOKe$fs","accessSync","e","async","$fdeccbe171b4469a$export$63c5b6d6ff5b7ee1","process","printUsage","argv","$bJOKe$minimist","slice","ret","in","out","help","h","undefined","console","log","exit","_","length","name","createStream","stdin","stdout","constants","R_OK","Error","syscall","path","createReadStream","override","f","resolvedIn","$bJOKe$path","resolve","hasOwnProperty","cause","destFileToWriteTo","destFolderToCreate","dirname","mkdirSync","recursive","createWriteStream","flags","allowDigitToStartClassName","Boolean","$fdeccbe171b4469a$export$af6bad00634a71e4","originalDir","cwd","notFound","F_OK","chdir","pkgDir","Array","prototype","peek","this","String","removeFromEnd","str","endsWith","substring","lastIndexOf","toString"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}