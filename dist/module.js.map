{"mappings":"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","sources":["workspaces/utils/src/index.js"],"sourcesContent":["import minimist from 'minimist';\nimport debugFunc from 'debug'\nimport path from 'path'\nimport fs from 'fs'\n\nconst debug = debugFunc('@aakoch:utils')\n\nfunction isSupportedFileExtension(fileExtWithDot) {\n  debug('isSupportedFileExtension(): fileExtWithDot=' + fileExtWithDot)\n  return fileExtWithDot.toLowerCase() == '.pug' || fileExtWithDot.toLowerCase() == '.foo-dog'\n}\n\nArray.prototype.peek = function () {\n  return this[this.length - 1]\n}\n\nString.prototype.removeFromEnd = function (str) {\n  return this.endsWith(str) ? this.substring(0, this.lastIndexOf(str)) : this.toString()\n}\n\nfunction exists(filename) {\n  try {\n    return (fs.accessSync(filename), true)\n  } catch (e) {\n    return false\n  }\n}\n\nasync function parseArguments(process, printUsage) {\n  const argv = minimist(process.argv.slice(2))\n  debug('argv=', argv)\n  let ret = { in: {}, out: {} }\n\n  if (argv.help || argv.h) {\n    debug('help option detected')\n    printUsage()\n    process.exit()\n  } else if (argv._.length == 0) {\n    debug('no arguments - using stdin and stdout')\n    ret = { in: { name: 'stdin', createStream: () => process.stdin }, out: { name: 'stdout', createStream: () => process.stdout } }\n  } else if (argv._.length == 1) {\n    debug('one argument - reading file and piping to stdout')\n    try {\n      fs.accessSync(argv._[0], fs.constants.R_OK)\n    } catch (e) {\n      throw new Error(`Could not ${e.syscall} \"${e.path}\"`)\n    }\n\n    debug('creating read stream for ' + argv?._[0])\n    ret = {\n      in: { name: argv._[0], createStream: () => fs.createReadStream(argv._[0]) },\n      out: { name: 'stdout', createStream: () => process.stdout },\n      override: argv.f\n    }\n  } else {\n    debug('two or more arguments')\n\n    if (argv._[0] == '-') {\n      debug('first argument was - - using stdin')\n      ret.in = {\n        name: 'stdin',\n        createStream: () => process.stdin\n      }\n      debug('Reading from stdin');\n    } else {\n      const resolvedIn = path.resolve(argv._[0])\n      debug(`first argument was ${argv._[0]}. Resolved is ${resolvedIn} - reading file`)\n      try {\n        fs.accessSync(resolvedIn, fs.constants.R_OK)\n\n        ret.in = {\n          name: resolvedIn,\n          createStream: () => fs.createReadStream(resolvedIn)\n        }\n      } catch (e) {\n        if (e.hasOwnProperty('syscall'))\n          throw new Error(`Could not ${e.syscall} \"${e.path}\"`, { cause: e })\n        else\n          throw e;\n      }\n    }\n\n    if (argv._[1] == '-') {\n      debug('second argument was - - using stdout')\n      ret.out = {\n        name: 'stdout',\n        createStream: () => process.stdout\n      }\n      console.log('writing to stdout');\n    } else {\n      const destFileToWriteTo = path.resolve(argv._[1]);\n      const destFolderToCreate = path.dirname(destFileToWriteTo);\n      debug(`creating (if not already existing) ${destFolderToCreate}`);\n      fs.mkdirSync(destFolderToCreate, { recursive: true });\n\n      debug(`second argument was ${argv._[1]}. Resolved ${destFileToWriteTo} - writing file`)\n\n      try {\n        ret.out = {\n          name: destFileToWriteTo,\n          createStream: () => fs.createWriteStream(destFileToWriteTo, { flags: 'w' })\n        }\n      } catch (e) {\n        if (e.hasOwnProperty('syscall'))\n          throw new Error(`Could not ${e.syscall} \"${e.path}\"`, { cause: e })\n        else\n          throw e;\n      }\n    }\n  }\n\n  if (argv.hasOwnProperty('f')) {\n    ret.override = argv.f\n  }\n  if (argv.hasOwnProperty('allow-digits-to-start-css-classes')) {\n    ret.allowDigitToStartClassName = !!argv['allow-digits-to-start-css-classes']\n    debug('ret.allowDigitToStartClassName=', ret.allowDigitToStartClassName)\n  } else if (argv.hasOwnProperty('allowDigitToStartClassName')) {\n    ret.allowDigitToStartClassName = new Boolean(argv['allowDigitToStartClassName'])\n    debug('ret.allowDigitToStartClassName=', ret.allowDigitToStartClassName)\n  }\n\n  return ret\n}\n\nfunction simpleProjectRootDir() {\n  const originalDir = process.cwd()\n  let notFound = true\n  while (notFound) {\n    try {\n      fs.accessSync('package.json', fs.constants.F_OK)\n      notFound = false\n    } catch (e) {\n      process.chdir('..')\n    }\n  }\n  const pkgDir = process.cwd()\n  process.chdir(originalDir)\n  return pkgDir\n}\n\nexport {\n  exists,\n  isSupportedFileExtension,\n  parseArguments,\n  simpleProjectRootDir\n}"],"names":["$5c7d57c5677f0bcf$var$debug","$ePi2v$debug","$5c7d57c5677f0bcf$export$777d1004acb65c30","fileExtWithDot","toLowerCase","$5c7d57c5677f0bcf$export$f7e9f41ea797a17","filename","$ePi2v$fs","accessSync","e","$5c7d57c5677f0bcf$export$63c5b6d6ff5b7ee1","process","printUsage","argv","$ePi2v$minimist","slice","ret","in","out","help","h","exit","_","length","name","createStream","stdin","stdout","constants","R_OK","Error","syscall","path","createReadStream","override","f","resolvedIn","$ePi2v$path","resolve","hasOwnProperty","cause","console","log","destFileToWriteTo","destFolderToCreate","dirname","mkdirSync","recursive","createWriteStream","flags","allowDigitToStartClassName","Boolean","$5c7d57c5677f0bcf$export$af6bad00634a71e4","originalDir","cwd","notFound","F_OK","chdir","pkgDir","Array","prototype","peek","this","String","removeFromEnd","str","endsWith","substring","lastIndexOf","toString"],"version":3,"file":"module.js.map","sourceRoot":"../../../"}